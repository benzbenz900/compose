version: "3.9"
services:
  onefence-data-mapping-service:
    networks:
      - host
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
      - urlPeople=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/user/
      - urlUser=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/user/
      - urlOrg=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/department/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-data-mapping-service.entrypoints=${TRAEFIK_ENTRYPOINT}
      
      - traefik.http.routers.onefence-data-mapping-service.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/data-mapping`)
      - traefik.http.routers.onefence-data-mapping-service.middlewares=onefence-data-mapping-1
      - traefik.http.services.onefence-data-mapping-service.loadbalancer.server.port=5002
      - traefik.http.middlewares.onefence-data-mapping-1.stripprefix.prefixes=/data-mapping
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-data-mapping-service:${IMAGE_TAG}

  onefence-consent-v2-api:
    networks:
      - host
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
      - urlPeople=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/user/
      - urlUser=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/user/
      - urlOrg=${HTTP_OR_HTTPS}onefence-usermanagement-organization:5003/user/org/department/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-consent-v2-api.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.onefence-consent-v2-api.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/consentv2`)
      
      - traefik.http.routers.onefence-consent-v2-api.middlewares=onefence-consent-v2-api-1
      - traefik.http.services.onefence-consent-v2-api.loadbalancer.server.port=5002
      - traefik.http.middlewares.onefence-consent-v2-api-1.stripprefix.prefixes=/consentv2
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-consent-v2-api:${IMAGE_TAG}

  onefence-usermanagement-organization:
    networks:
      - host
    depends_on:
      - traefik-gateway
      - keycloak-service
      - onefence-log
      - mongoDB
    
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - KEYCLOAKURLVM=${HTTP_OR_HTTPS}keycloak-service:8080/
      - KEYCLOAKADMIN=${KEYCLOAKADMIN}
      - KEYCLOAKADMINPASS=${KEYCLOAKADMINPASS}
      - LogArnOrURLvm=${HTTP_OR_HTTPS}onefence-log:5004/event/
      - MongoDBURIVm=mongodb://mongoDB:27017/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-usermanagement-organization.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.onefence-usermanagement-organization.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/organization`)
      
      - traefik.http.services.onefence-usermanagement-organization.loadbalancer.server.port=5003
      - traefik.http.routers.onefence-usermanagement-organization.middlewares=onefence-usermanagement-organization-1
      - traefik.http.middlewares.onefence-usermanagement-organization-1.stripprefix.prefixes=/organization
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-usermanagement-api:${IMAGE_TAG}

  onefence-log:
    networks:
      - host
    depends_on:
      - traefik-gateway
      - mongoDB
    
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-log.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.onefence-log.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/log`)
      
      - traefik.http.routers.onefence-log.middlewares=onefence-log
      - traefik.http.services.onefence-log.loadbalancer.server.port=5004
      - traefik.http.middlewares.onefence-log.stripprefix.prefixes=/log
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-log:${IMAGE_TAG}

  notification-service:
    networks:
      - host
    depends_on:
      - traefik-gateway
      - mongoDB
    
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.notification-service.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.notification-service.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/notification-service`)
      
      - traefik.http.routers.notification-service.middlewares=notification-service-1
      - traefik.http.services.notification-service.loadbalancer.server.port=5006
      - traefik.http.middlewares.notification-service-1.stripprefix.prefixes=/notification-service
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-notification-sns-websocket-sqs:${IMAGE_TAG}

  onefence-comment-service:
    networks:
      - host
    depends_on:
      - traefik-gateway
      - mongoDB
    
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-comment-service.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.onefence-comment-service.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/comment_service`)
      
      - traefik.http.routers.onefence-comment-service.middlewares=onefence-comment-service-1
      - traefik.http.services.onefence-comment-service.loadbalancer.server.port=5007
      - traefik.http.middlewares.onefence-comment-service-1.stripprefix.prefixes=/comment_service
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-comment-service:${IMAGE_TAG}

  onefence-file-management:
    networks:
      - host
    depends_on:
      - traefik-gateway
      - mongoDB
      - minio-service
    
    restart: always
    environment:
      - environment=${RUN_MODE}
      - RUNLOCALVM=TRUE
      - MongoDBURIVm=mongodb://mongoDB:27017/
      - BUCKETPRIVATE=file-management-private
      - BUCKETPUBLIC=file-management-public
      - MINIOendpoint=${TRAEFIK_HOST}/s3
      - MINIOendpointPublic=${TRAEFIK_HOST}/s3
      - MINIOAccessKey=sQbsujtsXHgRqbZ7fT56
      - MINIOSecretKey=E6LU34Px31p1tmXnDE5eeddYEMY9F3yS984MESPa
    # deploy:
    #   mode: replicated
    #   replicas: 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.onefence-file-management.entrypoints=${TRAEFIK_ENTRYPOINT}
      - traefik.http.routers.onefence-file-management.rule=Host(`${TRAEFIK_HOST}`) && PathPrefix(`/file_management`)
      
      - traefik.http.routers.onefence-file-management.middlewares=onefence-file-management-1
      - traefik.http.services.onefence-file-management.loadbalancer.server.port=5007
      - traefik.http.middlewares.onefence-file-management-1.stripprefix.prefixes=/file_management
    image: 312933510661.dkr.ecr.ap-southeast-1.amazonaws.com/onefence-file-management:${IMAGE_TAG}